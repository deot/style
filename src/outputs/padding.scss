@use "sass:list";
@use "../variables/default" as vd;
@use "./gen-mixins/padding" as gm;

// 水平间距

$padding-list: 4, 5, 8, 10, 12, 13, 15, 16, 18, 20, 21, 24, 25, 30, 32, 48, 56, 60;

@if vd.$scale > 1 {
	$padding-list: list.join($padding-list, (3, 4, 5, 6, 7, 9));
}

$padding-list-join-data: false !default;

@if $padding-list-join-data and meta.type-of($padding-list-join-data) == 'list' {
	$padding-list: list.join($padding-list, $padding-list-join-data);
}

$padding-keys: '', 'tb', 'lr', 't', 'l', 'r', 'b';
$padding-options: (unit: vd.$unit, scale: vd.$scale, prefix: vd.$prefix, name: pd);

// 如g-pd-10, g-pd-tb-10...
@include gm.padding($padding-keys, $padding-list, $padding-options);


#{vd.$computed-prefix}pd-s {
	padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
}

#{vd.$computed-prefix}pd-tb-s {
	padding-top: env(safe-area-inset-top);
	padding-bottom: env(safe-area-inset-bottom);
}

#{vd.$computed-prefix}pd-lr-s {
	padding-right: env(safe-area-inset-right);
	padding-left: env(safe-area-inset-left);
}

#{vd.$computed-prefix}pd-t-s {
	padding-top: env(safe-area-inset-top);
}

#{vd.$computed-prefix}pd-b-s {
	padding-bottom: env(safe-area-inset-bottom);
}

#{vd.$computed-prefix}pd-l-s {
	padding-left: env(safe-area-inset-left);
}

#{vd.$computed-prefix}pd-r-s {
	padding-right: env(safe-area-inset-right);
}
